{"ast":null,"code":"import _classCallCheck from \"/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/src/components/Album.js\";\nimport React, { Component } from 'react';\nimport albumData from './../data/albums';\nimport PlayerBar from './PlayerBar';\n\nvar Album =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Album, _Component);\n\n  function Album(props) {\n    var _this;\n\n    _classCallCheck(this, Album);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Album).call(this, props));\n\n    _this.mouseEnter = function (song) {\n      _this.setState({\n        isHovered: song\n      });\n    };\n\n    _this.mouseLeave = function (song) {\n      _this.setState({\n        isHovered: \"null\"\n      });\n    };\n\n    var album = albumData.find(function (album) {\n      return album.slug === _this.props.match.params.slug;\n    });\n    _this.state = {\n      album: album,\n      currentSong: album.songs[0],\n      currentTime: 0,\n      duration: album.songs[0].duration,\n      currentVolume: 50,\n      volume: 100,\n      isPlaying: false,\n      isHovered: \"null\"\n    };\n    _this.audioElement = document.createElement('audio');\n    _this.audioElement.src = album.songs[0].audioSrc;\n    _this.audioElement.volume = 1;\n    return _this;\n  }\n\n  _createClass(Album, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.eventListeners = {\n        timeupdate: function timeupdate(e) {\n          _this2.setState({\n            currentTime: _this2.audioElement.currentTime\n          });\n        },\n        durationchange: function durationchange(e) {\n          _this2.setState({\n            duration: _this2.audioElement.duration\n          });\n        },\n        volumeupdate: function volumeupdate(e) {\n          _this2.setState({\n            currentVolume: _this2.audioElement.currentVolume\n          });\n        },\n        lengthchange: function lengthchange(e) {\n          _this2.setState({\n            length: _this2.audioElement.length\n          });\n        }\n      };\n      this.audioElement.addEventListener('timeupdate', this.eventListeners.timeupdate);\n      this.audioElement.addEventListener('durationchange', this.eventListeners.durationchange);\n      this.audioElement.addEventListener('volumeupdate', this.eventListeners.volumeupdate);\n      this.audioElement.addEventListener('lengthchange', this.eventListeners.lengthchange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.audioElement.src = null;\n      this.audioElement.removeEventListener('timeupdate', this.eventListeners.timeupdate);\n      this.audioElement.removeEventListener('durationchange', this.eventListeners.durationchange);\n      this.audioElement.removeEventListener('volumeupdate', this.eventListeners.volumeupdate);\n      this.audioElement.removeEventListener('lengthchange', this.eventListeners.lengthchange);\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.audioElement.play();\n      this.setState({\n        isPlaying: true\n      });\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.audioElement.pause();\n      this.setState({\n        isPlaying: false\n      });\n    }\n  }, {\n    key: \"setSong\",\n    value: function setSong(song) {\n      this.audioElement.src = song.audioSrc;\n      this.setState({\n        currentSong: song\n      });\n    }\n  }, {\n    key: \"handleSongClick\",\n    value: function handleSongClick(song) {\n      var isSameSong = this.state.currentSong === song;\n\n      if (this.state.isPlaying && isSameSong) {\n        this.pause();\n      } else {\n        if (!isSameSong) {\n          this.setSong(song);\n        }\n\n        this.play();\n      }\n    }\n  }, {\n    key: \"handlePrevClick\",\n    value: function handlePrevClick() {\n      var _this3 = this;\n\n      var currentIndex = this.state.album.songs.findIndex(function (song) {\n        return _this3.state.currentSong === song;\n      });\n      var newIndex = Math.max(0, currentIndex - 1);\n      var newSong = this.state.album.songs[newIndex];\n      this.setSong(newSong);\n      this.play();\n    }\n  }, {\n    key: \"handleNextClick\",\n    value: function handleNextClick() {\n      var _this4 = this;\n\n      var currentIndex = this.state.album.songs.findIndex(function (song) {\n        return _this4.state.currentSong === song;\n      });\n      var newIndex = Math.min(4, currentIndex + 1);\n      var newSong = this.state.album.songs[newIndex];\n      this.setSong(newSong);\n      this.play();\n    }\n  }, {\n    key: \"handleTimeChange\",\n    value: function handleTimeChange(e) {\n      var newTime = this.audioElement.duration * e.target.value;\n      this.audioElement.currentTime = newTime;\n      this.setState({\n        currentTime: newTime\n      });\n    }\n  }, {\n    key: \"handleVolumeChange\",\n    value: function handleVolumeChange(e) {\n      this.audioElement.volume = e.target.value;\n      this.setState({\n        volume: e.target.value\n      });\n    }\n  }, {\n    key: \"handleNumber\",\n    value: function handleNumber(song, index) {\n      var isSameSong = this.state.currentSong === song;\n\n      if (isSameSong && this.state.isPlaying) {\n        return React.createElement(\"span\", {\n          className: \"icon ion-md-pause\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        });\n      } else if (this.state.isHovered === song && !this.state.isPlaying) {\n        return React.createElement(\"span\", {\n          className: \"icon ion-md-play\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, index + 1);\n      }\n    }\n  }, {\n    key: \"formatTime\",\n    value: function formatTime(time) {\n      var minutes = Math.floor(time / 60);\n      var seconds = Math.floor(time % 60);\n      var remSec = seconds;\n\n      if (seconds < 10) {\n        remSec = '0' + seconds;\n      }\n\n      return \"\".concat(minutes, \":\").concat(remSec);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"section\", {\n        className: \"album\",\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        id: \"album-info\",\n        style: {\n          height: '150',\n          width: '150'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"album-cover-art\",\n        src: this.state.album.albumCover,\n        alt: this.state.album.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"album-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"album-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.album.title), React.createElement(\"h2\", {\n        className: \"artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.state.album.artist), React.createElement(\"div\", {\n        id: \"release-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.album.releaseInfo))), React.createElement(\"table\", {\n        id: \"song-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"colgroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"col\", {\n        id: \"song-number-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"col\", {\n        id: \"song-title-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"col\", {\n        id: \"song-duration-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"tbody\", {\n        className: \"songList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.album.songs.map(function (song, index) {\n        return React.createElement(\"tr\", {\n          className: \"song\",\n          key: index,\n          onClick: function onClick() {\n            return _this5.handleSongClick(song);\n          },\n          onMouseEnter: function onMouseEnter() {\n            return _this5.mouseEnter(song);\n          },\n          onMouseLeave: function onMouseLeave() {\n            return _this5.mouseLeave(song);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          id: \"song-number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, _this5.handleNumber(song, index)), React.createElement(\"td\", {\n          id: \"song-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, song.title), React.createElement(\"td\", {\n          id: \"song-duration\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, _this5.formatTime(song.duration)));\n      }))), React.createElement(PlayerBar, {\n        isPlaying: this.state.isPlaying,\n        currentSong: this.state.currentSong,\n        currentTime: this.audioElement.currentTime,\n        duration: this.audioElement.duration,\n        currentVolume: this.audioElement.currentVolume,\n        volume: this.audioElement.volume,\n        length: this.audioElement.length,\n        handleSongClick: function handleSongClick() {\n          return _this5.handleSongClick(_this5.state.currentSong);\n        },\n        handlePrevClick: function handlePrevClick() {\n          return _this5.handlePrevClick();\n        },\n        handleNextClick: function handleNextClick() {\n          return _this5.handleNextClick();\n        },\n        handleTimeChange: function handleTimeChange(e) {\n          return _this5.handleTimeChange(e);\n        },\n        handleVolumeChange: function handleVolumeChange(e) {\n          return _this5.handleVolumeChange(e);\n        },\n        formatTime: function formatTime(time) {\n          return _this5.formatTime(time);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Album;\n}(Component);\n\nexport default Album;","map":{"version":3,"sources":["/home/hayabusa/Documents/WebDevelopment/Projects/React_Projects/bloc-jams-react/src/components/Album.js"],"names":["React","Component","albumData","PlayerBar","Album","props","mouseEnter","song","setState","isHovered","mouseLeave","album","find","slug","match","params","state","currentSong","songs","currentTime","duration","currentVolume","volume","isPlaying","audioElement","document","createElement","src","audioSrc","eventListeners","timeupdate","e","durationchange","volumeupdate","lengthchange","length","addEventListener","removeEventListener","play","pause","isSameSong","setSong","currentIndex","findIndex","newIndex","Math","max","newSong","min","newTime","target","value","index","time","minutes","floor","seconds","remSec","color","height","width","albumCover","title","artist","releaseInfo","map","handleSongClick","handleNumber","formatTime","handlePrevClick","handleNextClick","handleTimeChange","handleVolumeChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport albumData from './../data/albums';\nimport PlayerBar from './PlayerBar';\n\nclass Album extends Component{\n  constructor(props) {\n    super(props);\n\n    const album = albumData.find( album => {\n      return album.slug === this.props.match.params.slug\n    });\n\n    this.state = {\n      album : album,\n      currentSong: album.songs[0],\n      currentTime: 0,\n      duration: album.songs[0].duration,\n      currentVolume: 50,\n      volume: 100,\n      isPlaying: false,\n      isHovered: \"null\"\n    };\n\n    this.audioElement = document.createElement('audio');\n    this.audioElement.src = album.songs[0].audioSrc;\n    this.audioElement.volume = 1;\n  }\n\n  componentDidMount() {\n    this.eventListeners = {\n      timeupdate: e => {\n        this.setState({ currentTime: this.audioElement.currentTime});\n      },\n      durationchange: e => {\n        this.setState({ duration: this.audioElement.duration});\n      },\n      volumeupdate: e => {\n        this.setState({ currentVolume: this.audioElement.currentVolume });\n      },\n      lengthchange: e => {\n        this.setState({ length: this.audioElement.length });\n      }\n    };\n    this.audioElement.addEventListener('timeupdate', this.eventListeners.timeupdate);\n    this.audioElement.addEventListener('durationchange', this.eventListeners.durationchange);\n    this.audioElement.addEventListener('volumeupdate', this.eventListeners.volumeupdate);\n    this.audioElement.addEventListener('lengthchange', this.eventListeners.lengthchange);\n  }\n\n  componentWillUnmount() {\n    this.audioElement.src = null;\n    this.audioElement.removeEventListener('timeupdate', this.eventListeners.timeupdate);\n    this.audioElement.removeEventListener('durationchange', this.eventListeners.durationchange);\n    this.audioElement.removeEventListener('volumeupdate', this.eventListeners.volumeupdate);\n    this.audioElement.removeEventListener('lengthchange', this.eventListeners.lengthchange);\n  }\n\n  play() {\n    this.audioElement.play();\n    this.setState({ isPlaying: true });\n  }\n\n  pause() {\n    this.audioElement.pause();\n    this.setState({ isPlaying: false});\n  }\n\n  setSong(song) {\n    this.audioElement.src = song.audioSrc;\n    this.setState({ currentSong: song });\n  }\n\n  handleSongClick(song) {\n    const isSameSong = this.state.currentSong === song;\n    if (this.state.isPlaying && isSameSong) {\n      this.pause();\n    } else {\n      if (!isSameSong) { this.setSong(song); }\n      this.play();\n    }\n  }\n\n  handlePrevClick() {\n    const currentIndex = this.state.album.songs.findIndex(song => this.state.currentSong === song);\n    const newIndex = Math.max(0, currentIndex - 1);\n    const newSong = this.state.album.songs[newIndex];\n    this.setSong(newSong);\n    this.play();\n  }\n\n  handleNextClick() {\n    const currentIndex = this.state.album.songs.findIndex(song => (\n      this.state.currentSong === song\n    ));\n    const newIndex = Math.min(4, currentIndex + 1);\n    const newSong = this.state.album.songs[newIndex];\n\n    this.setSong(newSong);\n    this.play();\n  }\n\n  handleTimeChange(e) {\n    const newTime = this.audioElement.duration * e.target.value;\n    this.audioElement.currentTime = newTime;\n    this.setState({ currentTime: newTime });\n  }\n\n  handleVolumeChange(e) {\n    this.audioElement.volume = e.target.value;\n    this.setState({ volume: e.target.value });\n  }\n\n  mouseEnter = (song) => {\n    this.setState({isHovered: song})\n  }\n\n  mouseLeave = (song) => {\n    this.setState({isHovered: \"null\"});\n  }\n\n  handleNumber(song, index) {\n    const isSameSong = this.state.currentSong === song;\n    if (isSameSong && this.state.isPlaying) {\n      return (\n        <span className=\"icon ion-md-pause\"></span>\n      )\n    } else if (this.state.isHovered === song && !this.state.isPlaying) {\n      return (\n        <span className=\"icon ion-md-play\"></span>\n      )\n    } else {\n      return (\n        <span>{index + 1}</span>\n      )\n    }\n  }\n\n  formatTime(time) {\n    let minutes = Math.floor(time / 60);\n    let seconds = Math.floor(time % 60);\n    let remSec = seconds;\n    if (seconds < 10) {\n      remSec = '0' + seconds;\n    }\n    return (\n      `${minutes}:${remSec}`\n    )\n  }\n\n  render() {\n    return (\n      <section className='album' style={{color: 'white'}}>\n        <section id=\"album-info\" style={{height:'150', width:'150'}}>\n          <img id=\"album-cover-art\" src={this.state.album.albumCover} alt={this.state.album.title} />\n          <div className=\"album-details\">\n            <h1 id=\"album-title\">{this.state.album.title}</h1>\n            <h2 className=\"artist\">{this.state.album.artist}</h2>\n            <div id=\"release-info\">{this.state.album.releaseInfo}</div>\n          </div>\n        </section>\n\n        <table id=\"song-list\">\n          <colgroup>\n            <col id=\"song-number-column\" />\n            <col id=\"song-title-column\" />\n            <col id=\"song-duration-column\" />\n          </colgroup>\n\n          <tbody className=\"songList\">\n            {\n              this.state.album.songs.map((song, index) =>\n                <tr className=\"song\" key={index} onClick={() => this.handleSongClick(song)} onMouseEnter={() => this.mouseEnter(song)} onMouseLeave={() => this.mouseLeave(song)} >\n                  <td id=\"song-number\">{this.handleNumber(song, index)}</td>\n                  <td id=\"song-title\">{song.title}</td>\n                  <td id=\"song-duration\">{this.formatTime(song.duration)}</td>\n                </tr>\n            )}\n          </tbody>\n        </table>\n        <PlayerBar\n          isPlaying={this.state.isPlaying} currentSong={this.state.currentSong}\n          currentTime={this.audioElement.currentTime}\n          duration={this.audioElement.duration}\n          currentVolume={this.audioElement.currentVolume}\n          volume={this.audioElement.volume}\n          length={this.audioElement.length}\n          handleSongClick={() => this.handleSongClick(this.state.currentSong)}\n          handlePrevClick={() => this.handlePrevClick()}\n          handleNextClick={() => this.handleNextClick()}\n          handleTimeChange={(e) => this.handleTimeChange(e)}\n          handleVolumeChange={(e) => this.handleVolumeChange(e)}\n          formatTime={(time) => this.formatTime(time)}\n        />\n      </section>\n    );\n  }\n}\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}